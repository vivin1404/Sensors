import spidev
import time
import socket
import numpy as np

# Configuration
HOST = '192.168.1.2'        # IP address of the onboard system
PORT = 12345                # Port number for communication
SPI_CHANNEL = 0
ADC_CHANNEL = 0

# Initialize SPI
spi = spidev.SpiDev()
spi.open(0, SPI_CHANNEL)
spi.max_speed_hz = 1350000

def read_adc(channel):
    adc = spi.xfer2([1, (8 + channel) << 4, 0])
    data = ((adc[1] & 3) << 8) + adc[2]
    return data

def main():
    connection = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    connection.connect((HOST, PORT))

    try:
        while True:
            # Read ADC value
            adc_value = read_adc(ADC_CHANNEL)

            # Convert ADC value to voltage (assuming 3.3V reference voltage)
            voltage = (adc_value * 3.3) / 1023

            # Sending data to the onboard system
            connection.sendall(str(voltage).encode('utf-8'))
            
            # Sleep to reduce the data rate (adjust as needed)
            time.sleep(0.01)
    except KeyboardInterrupt:
        print('Stopping.')
    finally:
        connection.close()

if __name__ == '__main__':
    main()
